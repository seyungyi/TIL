val proRDD = sc.textFile("hdfs:///edudata/product_click.log")

val proWord = proRDD.flatMap(_.split(" "))

val proArray = proWord.collect

val proWordRDD = proWord.filter(_.matches("p[a-z0-9]*"))

val proWordOnePairRDD = proWordRDD.map((_, 1))

val proWordCountRDD = proWordOnePairRDD.reduceByKey(_ + _)

val proWordCountArray = proWordCountRDD.collect

proWordCountArray.foreach(println)


val proCountRDD = proWordCountRDD.map { wordAndCount => (wordAndCount._2, wordAndCount._1) }

val sortedCWRDD = proCountRDD.sortByKey(false)

val sortedWCRDD = sortedCWRDD.map { countAndWord => (countAndWord._2, countAndWord._1) }

val sortedWCArray = sortedWCRDD.collect

sortedWCArray.foreach(println)

(p001,84)
(p009,80)
(p008,80)
(p007,71)
(p002,66)
(p010,58)
(p003,54)
(p006,51)
(p004,50)
(p011,49)
(p005,43)
(p012,39)
(p014,10)
(p015,7)
(p013,4)

val top3WordArray = sortedWCRDD.take(3)
top3WordArray: Array[(String, Int)] = Array((p001,84), (p009,80), (p008,80))

top3WordArray.foreach(println)
(p001,84)
(p009,80)
(p008,80)
